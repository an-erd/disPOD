
// GATT Services provided by MilestonePod
//	1800 Generic Access
//	1801 Generic Attribute
//	1814 Running Speed and Cadence			<--- relevant
//	180a Device Information
//	fff0 ?
static BLEUUID serviceRscUUID((uint16_t)0x1814);		// RSC (Running Speed and Cadence)

// Characteristics for service RSC
//	0x2a54 RSC Feature
//	0x2a53 RSC Measurement	(and 2902)		<--- relevant
//	0x2a5d Sensor Location
//	0x2a55 SC Control Point	(and 2902)
//	0xff00 custom			(and 2902)		<--- relevant
static BLEUUID    charRscMeasurementUUID((uint16_t)0x2a53);
static BLEUUID    charCustomUUID((uint16_t)0xff00);

ESP_GATT_CONN_UNKNOWN 				= 0
ESP_GATT_CONN_L2C_FAILURE 			= 1
ESP_GATT_CONN_TIMEOUT 				= 0x08
ESP_GATT_CONN_TERMINATE_PEER_USER 	= 0x13
ESP_GATT_CONN_TERMINATE_LOCAL_HOST 	= 0x16
ESP_GATT_CONN_FAIL_ESTABLISH 		= 0x3e
ESP_GATT_CONN_LMP_TIMEOUT 			= 0x22
ESP_GATT_CONN_CONN_CANCEL 			= 0x0100
ESP_GATT_CONN_NONE 					= 0x0101

Program Flow
	START
	---
	Register Callbacks
	Register App Profiles
	---
	Set scan parameter
	---
	Start scanning
	until Device = MilestonePod or timeout
	---
	Connect to Device
	Connect ok?			-> handle, retry, ...
	---
	Configure MTU Size
	Search Services
	Get Characteristics
	Register for Notification
	---
	END




	static void gattc_profile_event_handler(esp_gattc_cb_event_t event, esp_gatt_if_t gattc_if, esp_ble_gattc_cb_param_t *param)
{
    case ESP_GATTC_REG_EVT:
    case ESP_GATTC_CONNECT_EVT:
    case ESP_GATTC_OPEN_EVT:
    case ESP_GATTC_CFG_MTU_EVT:
    case ESP_GATTC_SEARCH_RES_EVT:
    case ESP_GATTC_SEARCH_CMPL_EVT:
    case ESP_GATTC_REG_FOR_NOTIFY_EVT:
    case ESP_GATTC_NOTIFY_EVT:
    case ESP_GATTC_WRITE_DESCR_EVT:
    case ESP_GATTC_SRVC_CHG_EVT:
    case ESP_GATTC_WRITE_CHAR_EVT:
    case ESP_GATTC_DISCONNECT_EVT:
    default:
}


static void esp_gap_cb(esp_gap_ble_cb_event_t event, esp_ble_gap_cb_param_t *param)
{
    case ESP_GAP_BLE_SCAN_PARAM_SET_COMPLETE_EVT:
	case ESP_GAP_BLE_SCAN_START_COMPLETE_EVT:
    case ESP_GAP_BLE_SCAN_RESULT_EVT:{
		case ESP_GAP_SEARCH_INQ_RES_EVT
        case ESP_GAP_SEARCH_INQ_CMPL_EVT:
    }
    case ESP_GAP_BLE_SCAN_STOP_COMPLETE_EVT:
    case ESP_GAP_BLE_ADV_STOP_COMPLETE_EVT:
    case ESP_GAP_BLE_UPDATE_CONN_PARAMS_EVT:
    default:
}

static void esp_gattc_cb(esp_gattc_cb_event_t event, esp_gatt_if_t gattc_if, esp_ble_gattc_cb_param_t *param)
{
}

Device:
WEMOS LOLIN32, Chip is ESP32D0WDQ6 (revision 1)
M5Stack-FIRE,  Chip is ESP32D0WDQ6 (revision 1)



[D][BLERemoteCharacteristic.cpp:442] registerForNotify(): >> registerForNotify(): Characteristic: uuid: 00002a53-0000-1000-8000-00805f9b34fb, handle: 18 0x12, props: broadcast: 0, read: 0, write_nr: 0, write: 0, notify: 1, indicate: 0, auth: 0
[D][BLERemoteCharacteristic.cpp:327] getDescriptor(): >> getDescriptor: uuid: 00002902-0000-1000-8000-00805f9b34fb
[V][BLEUtils.cpp:950] gattClientEventTypeToString(): Unknown GATT Client event type: 38
[D][BLERemoteCharacteristic.cpp:331] getDescriptor(): << getDescriptor: found
[D][BLEDevice.cpp:148] gattClientEventHandler(): gattClientEventHandler [esp_gatt_if: 4] ... Unknown
[D][BLERemoteDescriptor.cpp:135] writeValue(): >> writeValue: handle: 19, uuid: 00002902-0000-1000-8000-00805f9b34fb
[V][BLEUtils.cpp:950] gattClientEventTypeToString(): Unknown GATT Client event type: 38
[D][BLERemoteDescriptor.cpp:154] writeValue(): << writeValue
[V][BLEUtils.cpp:1282] dumpGattClientEvent(): GATT Event: Unknown
[V][BLEUtils.cpp:950] gattClientEventTypeToString(): Unknown GATT Client event type: 38
[D][BLEClient.cpp:162] gattClientEventHandler(): gattClientEventHandler [esp_gatt_if: 4] ... Unknown
[D][BLERemoteCharacteristic.cpp:482] registerForNotify(): << registerForNotify()
[W][disPOD.ino:602] my_gattc_event_handler(): custom gattc event handler, event: 38
[D][BLERemoteCharacteristic.cpp:327] getDescriptor(): >> getDescriptor: uuid: 00002902-0000-1000-8000-00805f9b34fb
[V][BLEUtils.cpp:950] gattClientEventTypeToString(): Unknown GATT Client event type: 9
[D][BLERemoteCharacteristic.cpp:331] getDescriptor(): << getDescriptor: found
[D][BLEDevice.cpp:148] gattClientEventHandler(): gattClientEventHandler [esp_gatt_if: 4] ... Unknown
[D][BLERemoteDescriptor.cpp:135] writeValue(): >> writeValue: handle: 19, uuid: 00002902-0000-1000-8000-00805f9b34fb
[V][BLEUtils.cpp:950] gattClientEventTypeToString(): Unknown GATT Client event type: 9
[D][BLERemoteDescriptor.cpp:154] writeValue(): << writeValue
[V][BLEUtils.cpp:1282] dumpGattClientEvent(): GATT Event: Unknown
[D][BLERemoteCharacteristic.cpp:442] registerForNotify(): >> registerForNotify(): Characteristic: uuid: 0000ff00-0000-1000-8000-00805f9b34fb, handle: 28 0x1c, props: broadcast: 0, read: 0, write_nr: 0, write: 0, notify: 1, indicate: 0, auth: 0
[V][BLEUtils.cpp:950] gattClientEventTypeToString(): Unknown GATT Client event type: 9
[D][BLERemoteCharacteristic.cpp:327] getDescriptor(): >> getDescriptor: uuid: 00002902-0000-1000-8000-00805f9b34fb
[D][BLEClient.cpp:162] gattClientEventHandler(): gattClientEventHandler [esp_gatt_if: 4] ... Unknown
[D][BLERemoteCharacteristic.cpp:331] getDescriptor(): << getDescriptor: found
[W][disPOD.ino:602] my_gattc_event_handler(): custom gattc event handler, event: 9
[D][BLERemoteDescriptor.cpp:135] writeValue(): >> writeValue: handle: 29, uuid: 00002902-0000-1000-8000-00805f9b34fb
[V][BLEUtils.cpp:950] gattClientEventTypeToString(): Unknown GATT Client event type: 38
[D][BLERemoteDescriptor.cpp:154] writeValue(): << writeValue
[D][BLEDevice.cpp:148] gattClientEventHandler(): gattClientEventHandler [esp_gatt_if: 4] ... Unknown
[V][BLEUtils.cpp:950] gattClientEventTypeToString(): Unknown GATT Client event type: 38
[V][BLEUtils.cpp:1282] dumpGattClientEvent(): GATT Event: Unknown
[V][BLEUtils.cpp:950] gattClientEventTypeToString(): Unknown GATT Client event type: 38
[D][BLEClient.cpp:162] gattClientEventHandler(): gattClientEventHandler [esp_gatt_if: 4] ... Unknown
[D][BLERemoteCharacteristic.cpp:482] registerForNotify(): << registerForNotify()
[W][disPOD.ino:602] my_gattc_event_handler(): custom gattc event handler, event: 38
[D][BLERemoteCharacteristic.cpp:327] getDescriptor(): >> getDescriptor: uuid: 00002902-0000-1000-8000-00805f9b34fb
[V][BLEUtils.cpp:950] gattClientEventTypeToString(): Unknown GATT Client event type: 9
[D][BLERemoteCharacteristic.cpp:331] getDescriptor(): << getDescriptor: found
[D][BLEDevice.cpp:148] gattClientEventHandler(): gattClientEventHandler [esp_gatt_if: 4] ... Unknown
[D][BLERemoteDescriptor.cpp:135] writeValue(): >> writeValue: handle: 29, uuid: 00002902-0000-1000-8000-00805f9b34fb
[V][BLEUtils.cpp:950] gattClientEventTypeToString(): Unknown GATT Client event type: 9
[D][BLERemoteDescriptor.cpp:154] writeValue(): << writeValue
[V][BLEUtils.cpp:1282] dumpGattClientEvent(): GATT Event: Unknown
[V][BLEUtils.cpp:950] gattClientEventTypeToString(): Unknown GATT Client event type: 9
[D][BLEClient.cpp:162] gattClientEventHandler(): gattClientEventHandler [esp_gatt_if: 4] ... Unknown
[W][disPOD.ino:602] my_gattc_event_handler(): custom gattc event handler, event: 9
[V][BLEUtils.cpp:950] gattClientEventTypeToString(): Unknown GATT Client event type: 9
[D][BLEDevice.cpp:148] gattClientEventHandler(): gattClientEventHandler [esp_gatt_if: 4] ... Unknown
[V][BLEUtils.cpp:950] gattClientEventTypeToString(): Unknown GATT Client event type: 9
[V][BLEUtils.cpp:1282] dumpGattClientEvent(): GATT Event: Unknown
[V][BLEUtils.cpp:950] gattClientEventTypeToString(): Unknown GATT Client event type: 9
[D][BLEClient.cpp:162] gattClientEventHandler(): gattClientEventHandler [esp_gatt_if: 4] ... Unknown
[W][disPOD.ino:602] my_gattc_event_handler(): custom gattc event handler, event: 9
Preparation done, waiting for NOTIFY


Queue and event group       https://github.com/hamsternz/esp32_serial_log_to_sd/blob/master/main/gps_logger.c
LCD                         https://github.com/espressif/esp-iot-solution/tree/master/components/spi_devices/lcd
get around flickering w/    https://www.reddit.com/r/esp32/comments/87kp1e/your_experience_with_spi_connected_lcds/



$ python /home/AKAEM/esp/esp-idf/components/esptool_py/esptool/esptool.py --chip esp32 --port COM6 --baud 921600  --before default_reset --after hard_reset write_flash -z --flash_mode dio --flash_freq 40m --flash_size detect 0x10000 /home/AKAEM/esp/disPOD/build/dispod.bin

espota.exe -i 192.168.2.155 -p 3232 --auth= -f BLETest.ino.bin

$ ./components/arduino/tools/espota.exe -i 192.168.2.155 -p 3232 --auth= -d -r -f build/dispod.bin
20:50:04 [DEBUG]: Options: {'timeout': 10, 'esp_ip': '192.168.2.155', 'host_port': 26778, 'image': 'build/dispod.bin', 'host_ip': '0.0.0.0', 'auth': '', 'esp_port': 3232, 'spiffs': False, 'debug': True, 'progress': True}
20:50:04 [INFO]: Starting on 0.0.0.0:26778
20:50:04 [INFO]: Upload size: 1238784
Sending invitation to 192.168.2.155
20:50:04 [INFO]: Waiting for device...
Uploading: [=================================                           ] 54%

>miniweb -v -i 192.168.2.130 -p 80
file /dispod.bin



make erase_flash

make partition_table
python /home/AKAEM/esp/esp-idf/components/esptool_py/esptool/esptool.py --chip esp32 --port COM6 --baud 921600 --before default_reset --after hard_reset write_flash 0x8000 /home/AKAEM/esp/disPOD/build/partitions.bin
make partition_table-flash

make flash

python /home/AKAEM/esp/esp-idf/components/esptool_py/esptool/esptool.py --chip esp32 --port COM6 --baud 115200 --before default_reset --after hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size detect --no-c
ompress --verify 0xc91000 ./spiffs_image/spiffs_image.img
